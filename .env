# ============================================
# TEI NLP CONVERTER - ENVIRONMENT CONFIGURATION
# ============================================

# -----------------------------
# APPLICATION SETTINGS (Required)
# -----------------------------
APP_NAME="TEI NLP Converter"
VERSION="2.1.0"
ENVIRONMENT="development"  # Options: development, testing, production
DEBUG=false  # Set to true only in development

# -----------------------------
# SERVER CONFIGURATION (Required)
# -----------------------------
HOST="0.0.0.0"
PORT=8080
WORKERS=4  # Number of worker processes (production only)

# -----------------------------
# SECURITY KEYS (Required - MUST CHANGE!)
# -----------------------------
# Generate these with the commands provided below
SECRET_KEY="CHANGE_THIS_TO_RANDOM_32_CHAR_STRING"
SESSION_SECRET="CHANGE_THIS_TO_RANDOM_32_CHAR_STRING"
ENCRYPTION_KEY="CHANGE_THIS_TO_FERNET_KEY"

# To generate secure keys, run these commands:
# python -c "import secrets; print(secrets.token_urlsafe(32))"
# python -c "from cryptography.fernet import Fernet; print(Fernet.generate_key().decode())"

# -----------------------------
# DATABASE CONFIGURATION (Required)
# -----------------------------
# For PostgreSQL (production):
DATABASE_URL="postgresql://tei_user:your_password@localhost:5432/tei_nlp"

# For SQLite (development):
# DATABASE_URL="sqlite:///data/tei_nlp.db"

DATABASE_POOL_SIZE=20
DATABASE_MAX_OVERFLOW=40
DATABASE_POOL_RECYCLE=3600  # Recycle connections after 1 hour

# -----------------------------
# REDIS CACHE CONFIGURATION (Optional but recommended)
# -----------------------------
REDIS_URL="redis://localhost:6379/0"
# If Redis is password protected:
# REDIS_URL="redis://:password@localhost:6379/0"

CACHE_TTL=3600  # Cache time-to-live in seconds
MAX_CACHE_SIZE=10000  # Maximum number of items in memory cache

# -----------------------------
# REMOTE NLP SERVER (Optional)
# -----------------------------
USE_REMOTE_NLP=false  # Set to true if using remote NLP server
NLP_SERVER_URL="http://localhost:8081"
NLP_SERVER_API_KEY=""  # If remote server requires authentication
NLP_SERVER_TIMEOUT=30
NLP_CIRCUIT_BREAKER_THRESHOLD=5
NLP_CIRCUIT_BREAKER_TIMEOUT=60

# -----------------------------
# NLP PROCESSING SETTINGS
# -----------------------------
SPACY_MODEL="en_core_web_sm"
ENABLE_GPU=false  # Set to true if GPU is available
BATCH_SIZE=32

# -----------------------------
# SECURITY & RATE LIMITING
# -----------------------------
REQUIRE_AUTH=false  # Set to true in production
API_KEY=""  # Required if REQUIRE_AUTH=true
ENABLE_CSRF=true
CSRF_TOKEN_EXPIRY=3600
MAX_TEXT_LENGTH=100000
RATE_LIMIT_PER_MINUTE=100

# -----------------------------
# CORS CONFIGURATION
# -----------------------------
# Multiple origins separated by commas
CORS_ORIGINS='["http://localhost:3000", "http://localhost:8080"]'

# -----------------------------
# BACKGROUND TASKS
# -----------------------------
ENABLE_BACKGROUND_TASKS=true
LARGE_TEXT_THRESHOLD=5000  # Characters threshold for background processing
TASK_RETENTION_DAYS=7
MAX_CONCURRENT_TASKS=10

# -----------------------------
# DATA RETENTION
# -----------------------------
DATA_RETENTION_DAYS=90  # How long to keep processed texts
CLEANUP_INTERVAL_HOURS=24  # How often to run cleanup

# -----------------------------
# LOGGING
# -----------------------------
LOG_LEVEL="INFO"  # Options: DEBUG, INFO, WARNING, ERROR, CRITICAL
LOG_FILE_MAX_BYTES=10485760  # 10MB
LOG_FILE_BACKUP_COUNT=10
AUDIT_LOG_FILE="logs/audit.log"
ENABLE_AUDIT_LOG=true
ENABLE_REQUEST_ID=true

# -----------------------------
# MONITORING & METRICS
# -----------------------------
ENABLE_METRICS=true
METRICS_PORT=9090

# -----------------------------
# SESSION CONFIGURATION
# -----------------------------
SESSION_EXPIRE_MINUTES=60

# -----------------------------
# SECRETS BACKEND (Optional)
# -----------------------------
SECRETS_BACKEND="env"  # Options: env, file, vault, aws

# For HashiCorp Vault:
# VAULT_URL="http://vault:8200"
# VAULT_TOKEN="your-vault-token"

# For AWS Secrets Manager:
# AWS_REGION="us-east-1"
# AWS_ACCESS_KEY_ID="your-access-key"
# AWS_SECRET_ACCESS_KEY="your-secret-key"

# -----------------------------
# NLP PROVIDER CONFIGURATION
# -----------------------------
# Primary NLP provider (options: spacy, google, remote)
NLP_PROVIDER="spacy"

# Fallback providers (comma-separated)
NLP_FALLBACK_PROVIDERS="spacy"

# -----------------------------
# GOOGLE CLOUD NLP SETTINGS
# -----------------------------
# Google Cloud Project ID
GOOGLE_PROJECT_ID=""

# Path to service account credentials JSON
GOOGLE_CREDENTIALS_PATH=""

# Or use API Key (if not using service account)
GOOGLE_API_KEY=""
